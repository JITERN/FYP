
<launch>
  <group ns="rtabmap">
    <!-- Use RGBD synchronization -->
    <!-- Here is a general example using a standalone nodelet, 
         but it is recommended to attach this nodelet to nodelet 
         manager of the camera to avoid topic serialization -->

   <node pkg="rtabmap_sync" type="rgbd_sync" name="rgbd_sync">
     <!-- <remap from="rgb/image"       to="/ob_camera_l/color/image_raw"/> -->
     <!-- <remap from="depth/image"     to="/ob_camera_l/depth/image_raw"/> -->
     <!-- <remap from="rgb/camera_info" to="/ob_camera_l/color/camera_info"/> -->

     <remap from="rgb/image"       to="/data_throttled_image/compressed"/>
     <remap from="depth/image"     to="/data_throttled_image_depth/compressedDepth"/>
     <remap from="rgb/camera_info" to="/data_throttled_camera_info"/>
     <param name="approx_sync"     value="true"/>
     <!-- <param name="approx_sync_max_interval"     value="0.02"/> -->
     <param name="queue_size"     value="100"/>

      <arg name="rgb_image_transport"     default="compressed"/>    <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
      <arg name="depth_image_transport"   default="compressedDepth"/>  <!-- Depth compatible types: compressedDepth (see "rosrun image_transport list_transports") -->

   </node>


    <node name="rtabmap" pkg="rtabmap_slam" type="rtabmap" output="screen">
          <param name="frame_id" type="string" value="base_footprint"/>

          <param name="subscribe_depth" type="bool" value="false"/>
          <param name="subscribe_rgbd" type="bool" value="true"/>
          <param name="subscribe_scan" type="bool" value="true"/>
          <!-- <param name="subscribe_cloud" type="bool" value="true"/> -->

          
          <param name="approx_sync"       value="true"/> 

          <remap from="odom" to="/base_controller/odom"/>
          <remap from="scan" to="/base_scan"/>
          <!-- <remap from="scan_cloud" to="/velodyne_points"/> -->
          <!-- <remap from="rgbd_image" to="/rgbd_image"/> -->

          <param name="queue_size" type="int" value="10"/>

          <!-- RTAB-Map's parameters -->
          <param name="RGBD/NeighborLinkRefining" type="string" value="true"/>
          <param name="RGBD/ProximityBySpace"     type="string" value="true"/>
          <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
          <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
          <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
          <param name="Grid/Sensor"            type="int" value="0"/> <!-- [Create occupancy grid from selected sensor: 0=laser scan, 1=depth image(s) or 2=both laser scan and depth image(s).] -->

          
          <param name="Reg/Force3DoF"             type="string" value="true"/>
          <param name="Reg/Strategy"              type="string" value="1"/>     <!-- 0=Visual, 1=ICP, 2=Visual+ICP -->

          <!-- ICP parameters -->
          <param name="Icp/VoxelSize"                 type="string" value="0.05"/>
          <param name="Icp/MaxCorrespondenceDistance" type="string" value="0.1"/>

          <!-- <param name="proj_max_ground_angle" value="20"/> -->
          <param name="proj_max_ground_height" value="0.1"/>
          <param name="proj_max_height" value="1.2"/>
          <param name="proj_min_cluster_size" value="50"/>

    </node>



    <!-- Visualisation RTAB-Map -->
    <node pkg="rtabmap_viz" type="rtabmap_viz" name="rtabmap_viz" args="-d $(find rtabmap_demos)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_depth"  type="bool"   value="false"/>
      <param name="subscribe_rgbd"   type="bool"   value="true"/>
      <!-- <param name="subscribe_odom_info" type="bool"   value="$(arg odom_info_data)"/> -->
      <param name="frame_id"            type="string" value="base_footprint"/>
      <param name="odom_frame_id"            type="string" value="odom"/>
      <param name="rgbd_cameras"       type="int"    value="1"/>
      <param name="wait_for_transform"  type="bool"   value="true"/>

      <!-- <remap from="rgbd_image"       to="/rgbd_image"/> -->
      

      <param name="rgb/image_transport"  type="string"   value="compressed"/>

    </node>

  </group>
  


  <!-- <node pkg="rviz" type="rviz" name="rviz"  args="-d $(find my_robot_navigation)/rviz/rtabmap.rviz" output="screen"/> -->

</launch>